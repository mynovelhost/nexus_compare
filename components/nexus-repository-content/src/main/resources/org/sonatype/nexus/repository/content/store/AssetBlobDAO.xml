<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2008-present Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${namespace}">

  <insert id="createSchema">
    --
    -- each format has an asset blob table which they can extend
    --
    CREATE TABLE IF NOT EXISTS ${format}_asset_blob (
      asset_blob_id INT GENERATED BY DEFAULT AS IDENTITY,
      blob_ref      VARCHAR NOT NULL,
      blob_size     BIGINT NOT NULL,
      content_type  VARCHAR NOT NULL,
      checksums     ${JSON_TYPE} NOT NULL,
      blob_created  TIMESTAMP WITH TIME ZONE NOT NULL,
      created_by    VARCHAR,
      created_by_ip VARCHAR,

      CONSTRAINT pk_${format}_asset_blob_id PRIMARY KEY (asset_blob_id),
      CONSTRAINT uk_${format}_asset_blob_ref UNIQUE (blob_ref)
    );
    --
  </insert>

  <select id="browseUnusedAssetBlobs" resultType="AssetBlobData">
    SELECT * FROM ${format}_asset_blob LEFT JOIN ${format}_asset
        USING (asset_blob_id)
        WHERE ${format}_asset.asset_blob_id IS NULL
        <if test="continuationToken != null">
          AND ${format}_asset_blob.asset_blob_id > #{continuationToken}
        </if>
        ORDER BY ${format}_asset_blob.asset_blob_id LIMIT #{limit};
  </select>

  <insert id="createAssetBlob" useGeneratedKeys="true" keyProperty="assetBlobId" parameterType="AssetBlobData">
    INSERT INTO ${format}_asset_blob (blob_ref, blob_size, content_type, checksums, blob_created, created_by, created_by_ip)
        VALUES (#{blobRef}, #{blobSize}, #{contentType}, #{checksums}, #{blobCreated}, #{createdBy}, #{createdByIp});
  </insert>

  <select id="readAssetBlob" resultType="AssetBlobData">
    SELECT * FROM ${format}_asset_blob WHERE blob_ref = #{blobRef};
  </select>

  <delete id="deleteAssetBlob">
    DELETE FROM ${format}_asset_blob WHERE blob_ref = #{blobRef};
  </delete>

</mapper>
