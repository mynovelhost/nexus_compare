/*
 * Sonatype Nexus (TM) Open Source Version
 * Copyright (c) 2008-present Sonatype, Inc.
 * All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.
 *
 * This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
 * which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.
 *
 * Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
 * of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
 * Eclipse Foundation. All other trademarks are the property of their respective owners.
 */
package org.sonatype.nexus.repository.npm.internal.audit.report;

import java.util.Objects;

/**
 * Will be serialized into Json representation for npm audit report
 *
 * @since 3.24
 */
public class VulnerabilityReport
{
  private final int info;

  private final int low;

  private final int moderate;

  private final int high;

  private final int critical;

  public VulnerabilityReport(final int info, final int low, final int moderate, final int high, final int critical) {
    this.info = info;
    this.low = low;
    this.moderate = moderate;
    this.high = high;
    this.critical = critical;
  }

  @Override
  public boolean equals(final Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityReport that = (VulnerabilityReport) o;
    return info == that.info &&
        low == that.low &&
        moderate == that.moderate &&
        high == that.high &&
        critical == that.critical;
  }

  @Override
  public int hashCode() {
    return Objects.hash(info, low, moderate, high, critical);
  }

  @Override
  public String toString() {
    return String.format("info [%d] low [%d] moderate [%d] high [%d] critical [%d]",
        info, low, moderate, high, critical);
  }
}
